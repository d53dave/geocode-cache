plugins {
  id 'java'
  id 'application'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'io.freefair.lombok' version "4.1.6"
}

group = 'net.d53dev'
version = '0.1.0'

repositories {
    mavenCentral()
}

ext {
    vertxVersion = '3.8.5'
    junitJupiterEngineVersion = '5.4.0'
    log4jVersion = '2.13.0'
    truthVersion = '1.0.1'
    jooqVersion = '3.12.3'
    hashingVersion = '0.10.1'
    commonsVersion = '3.9'
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}

sourceCompatibility = '13'
targetCompatibility = '13'

def mainVerticleName = 'net.d53dev.geocodecache.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

dependencies {
    annotationProcessor "io.vertx:vertx-codegen:$vertxVersion:processor"
    annotationProcessor "io.vertx:vertx-service-proxy:$vertxVersion"

    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "org.apache.commons:commons-lang3:$commonsVersion"

    implementation "io.vertx:vertx-web-client:$vertxVersion"
    implementation "io.vertx:vertx-junit5:$vertxVersion"
    implementation "io.vertx:vertx-health-check:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-pg-client:$vertxVersion"
    implementation "io.vertx:vertx-config:$vertxVersion"
    implementation "io.vertx:vertx-web-api-contract:$vertxVersion"

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}


shadowJar {
    archiveClassifier.set('fat')
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

